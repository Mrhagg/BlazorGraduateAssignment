@page "/Users/Edit/{Id:int}"
@using System.Text.Json.Nodes
@using WebAppBlazor.Models
@inject HttpClient Http
@inject NavigationManager navManager


<div class="row">
    <div class="col-lg-8">
        <h1 class="mb-5">Edit User</h1>

        @if (user == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <div class="row-mb-3">
                <label class="col-md-4 col-form-label">User Id</label>
                <div class="col-md-8">
                    <input  class="form-control-plaintext" value="@Id" readonly/>
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-md-4 col-form-label">First Name</label>
                <div class="col-md-8">
                    <input class="form-control" @bind="UserData.FirstName" />
                    <span class="text-danger">@Errors["FirstName"]?[0]</span>
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-md-4 col-form-label">Last Name</label>
                <div class="col-md-8">
                    <input class="form-control" @bind="UserData.LastName" />
                    <span class="text-danger">@Errors["LastName"]?[0]</span>

                </div>
            </div>

            <div class="row mb-3">
                <label class="col-md-4 col-form-label">Email</label>
                <div class="col-md-8">
                    <input class="form-control" @bind="UserData.Email" />
                    <span class="text-danger">@Errors["Email"]?[0]</span>

                </div>
            </div>

            <div class="row mb-3">
                <label class="col-md-4 col-form-label">Password</label>
                <div class="col-md-8">
                    <input class="form-control" @bind="UserData.Password" />
                    <span class="text-danger">@Errors["Password"]?[0]</span>

                </div>
            </div>

            <div class="align-items-center row">
                <div class="offset-md-2 col-md-4 d-grid">
                    <button class="btn btn-primary" @onclick="SaveUser">Submit</button>
                </div>
                <div class="col-md-4 d-grid">
                    <a class="btn btn-outline-primary" href="/Users">Cancel</a>
                </div>
            </div>
        }
    </div>
</div>

@code {

    [Parameter]
    public int Id { set; get; }

    public User? user = null!;

    public UserDto UserData { set; get; } = new();

    public JsonNode Errors { set; get; } = new JsonObject();


    protected override async Task OnParametersSetAsync()
    {
        try
        {
            user = await Http.GetFromJsonAsync<User>("https://localhost:7041/api/User/" + Id);
            UserData.FirstName = user?.FirstName ?? "";
            UserData.LastName = user?.LastName ?? "";
            UserData.Email = user?.Email ?? "";
            UserData.Password = user?.Password ?? "";
        }
        catch(Exception ex)
        {
            Console.WriteLine("Exception : " + ex.Message);
        }
    }

    protected async Task SaveUser()
    {
        var response = await Http.PutAsJsonAsync("https://localhost:7041/api/User/" + Id, UserData);
        if (response.IsSuccessStatusCode)
        {
            navManager.NavigateTo("/Users");
        }
        else
        {
            var strRespone = await response.Content.ReadAsStringAsync();
            try
            {
                var jsonRespone = JsonNode.Parse(strRespone);
                Errors = jsonRespone?["errors"] ?? new JsonObject();
            }
            catch (Exception ex)
            {

            }
        }
    }
}
